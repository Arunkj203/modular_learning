
Steps after dataset loading:

1. Data Preprocessing --> Break into problems and preprocess it

2. Analyze the problems --> Use analyze_problems.py to analyze the problems

3. Retrieve relevant primitives --> Retrieve relevant primitives for each test problem ,summarize it

4. Generate Primitives --> Use generate_primitive.py to generate primitives for each problem with the retrieved relevant primitives

    4.1 Evaluate the generated primitives --> Evaluate the generated primitives (Optional)

    4.2 Filter --> Filter the new

5. Train the model --> Train the model with the new primitives
    
    5.1 Genearte synthetic data --> Generate synthetic data using the new primitives

    5.2 Train LoRA --> Train the LoRA adapter with the synthetic data

    5.3 Evaluate the LoRA adapter --> Evaluate the LoRA adapter on the test set

6. Use the generated primitives to solve the problems --> Use the generated primitives to solve the problems and evaluate the solutions

------------------------------------------------------------------------------------------------

File Structure:

main.py --> Main code file, organize the workflow

utilities.py --> Utility functions

preprocess.py --> Code to preprocess the data

analyze_problems.py --> Code to analyze the problems

Primitives Generation:

    retrieve_primitives.py --> Code to retrieve relevant primitives

    generate_primitive.py --> Code to generate primitives

task_controller.py --> Code to create synthetic data , train the new primitives

evaluate.py --> Code to evaluate the solutions generated by the Lora adapters sequence
